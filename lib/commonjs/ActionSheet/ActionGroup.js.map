{"version":3,"sources":["ActionGroup.tsx"],"names":["BLACK_54PC_TRANSPARENT","BLACK_87PC_TRANSPARENT","DESTRUCTIVE_COLOR","focusViewOnRender","ref","reactTag","Platform","OS","UIManager","sendAccessibilityEvent","AccessibilityEventTypes","typeViewFocused","AccessibilityInfo","setAccessibilityFocus","ActionGroup","_renderRowSeparator","key","styles","rowSeparator","props","separatorStyle","_renderTitleContent","title","renderTitle","titleTextStyle","message","messageTextStyle","showSeparators","titleContainer","paddingBottom","_renderIconElement","iconSource","color","tintIcons","iconStyle","icon","tintColor","undefined","_renderOptionViews","options","icons","destructiveButtonIndex","destructiveColor","onSelect","startIndex","length","textStyle","autoFocus","optionViews","nativeFeedbackBackground","TouchableNativeFeedbackSafe","Ripple","i","defaultColor","push","button","text","groupContainer","containerStyle","React","Component","defaultProps","StyleSheet","create","justifyContent","alignItems","flexDirection","height","paddingHorizontal","backgroundColor","overflow","width","marginRight","marginTop","fontSize","textAlignVertical","padding","paddingTop"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  Text,\n  Image,\n  View,\n  ScrollView,\n  findNodeHandle,\n  AccessibilityInfo,\n  Platform,\n  UIManager,\n} from 'react-native';\nimport TouchableNativeFeedbackSafe from './TouchableNativeFeedbackSafe';\nimport { ActionSheetOptions } from '../types';\n\ntype Props = ActionSheetOptions & {\n  tintIcons: boolean | null;\n  onSelect: (i: number) => boolean;\n  startIndex: number;\n  length: number;\n};\n\nconst BLACK_54PC_TRANSPARENT = '#0000008a';\nconst BLACK_87PC_TRANSPARENT = '#000000de';\nconst DESTRUCTIVE_COLOR = '#d32f2f';\n\n/**\n * Can be used as a React ref for a component to auto-focus for accessibility on render.\n * @param ref The component to auto-focus\n */\nconst focusViewOnRender = (ref: React.Component | null) => {\n  if (ref) {\n    const reactTag = findNodeHandle(ref);\n    if (reactTag) {\n      if (Platform.OS === 'android') {\n        // @ts-ignore: sendAccessibilityEvent is missing from @types/react-native\n        UIManager.sendAccessibilityEvent(\n          reactTag,\n          // @ts-ignore: AccessibilityEventTypes is missing from @types/react-native\n          UIManager.AccessibilityEventTypes.typeViewFocused\n        );\n      } else {\n        AccessibilityInfo.setAccessibilityFocus(reactTag);\n      }\n    }\n  }\n};\n\nexport default class ActionGroup extends React.Component<Props> {\n  static defaultProps = {\n    title: null,\n    message: null,\n    showSeparators: false,\n    tintIcons: true,\n    textStyle: {},\n  };\n\n  render() {\n    return (\n      <View style={[styles.groupContainer, this.props.containerStyle]}>\n        {this._renderTitleContent()}\n        <ScrollView>{this._renderOptionViews()}</ScrollView>\n      </View>\n    );\n  }\n\n  _renderRowSeparator = (key: string | number) => {\n    return (\n      <View key={`separator-${key}`} style={[styles.rowSeparator, this.props.separatorStyle]} />\n    );\n  };\n\n  _renderTitleContent = () => {\n    const {\n      title,\n      renderTitle,\n      titleTextStyle,\n      message,\n      messageTextStyle,\n      showSeparators,\n    } = this.props;\n\n    if (!title && !message && !renderTitle) {\n      return null;\n    }\n\n    return renderTitle ? (\n      renderTitle()\n    ) : (\n      <View>\n        <View style={[styles.titleContainer, { paddingBottom: showSeparators ? 24 : 16 }]}>\n          {!!title && <Text style={[styles.title, titleTextStyle]}>{title}</Text>}\n          {!!message && <Text style={[styles.message, messageTextStyle]}>{message}</Text>}\n        </View>\n        {!!showSeparators && this._renderRowSeparator('title')}\n      </View>\n    );\n  };\n\n  _renderIconElement = (iconSource: React.ReactNode | null, color: string) => {\n    const { tintIcons } = this.props;\n    if (!iconSource) {\n      return null;\n    }\n\n    if (typeof iconSource === 'number') {\n      const iconStyle = [styles.icon, { tintColor: tintIcons ? color : undefined }];\n      return <Image fadeDuration={0} source={iconSource} resizeMode=\"contain\" style={iconStyle} />;\n    } else {\n      return <View style={styles.icon}>{iconSource}</View>;\n    }\n  };\n\n  _renderOptionViews = () => {\n    const {\n      options,\n      icons,\n      destructiveButtonIndex,\n      destructiveColor = DESTRUCTIVE_COLOR,\n      onSelect,\n      startIndex,\n      length,\n      textStyle,\n      tintColor,\n      autoFocus,\n      showSeparators,\n    } = this.props;\n    const optionViews: React.ReactNode[] = [];\n    const nativeFeedbackBackground = TouchableNativeFeedbackSafe.Ripple(\n      'rgba(180, 180, 180, 1)',\n      false\n    );\n\n    for (let i = startIndex; i < startIndex + length; i++) {\n      const defaultColor = tintColor\n        ? tintColor\n        : (textStyle || {}).color || BLACK_87PC_TRANSPARENT;\n      const color = i === destructiveButtonIndex ? destructiveColor : defaultColor;\n      const iconSource = icons != null ? icons[i] : null;\n\n      optionViews.push(\n        <TouchableNativeFeedbackSafe\n          ref={autoFocus && i === 0 ? focusViewOnRender : undefined}\n          key={i}\n          pressInDelay={0}\n          background={nativeFeedbackBackground}\n          onPress={() => onSelect(i)}\n          style={styles.button}\n          accessibilityRole=\"button\"\n          accessibilityLabel={options[i]}>\n          {this._renderIconElement(iconSource, color)}\n          <Text style={[styles.text, textStyle, { color }]}>{options[i]}</Text>\n        </TouchableNativeFeedbackSafe>\n      );\n\n      if (showSeparators && i < startIndex + length - 1) {\n        optionViews.push(this._renderRowSeparator(i));\n      }\n    }\n\n    return optionViews;\n  };\n}\n\nconst styles = StyleSheet.create({\n  button: {\n    justifyContent: 'flex-start',\n    alignItems: 'center',\n    flexDirection: 'row',\n    height: 56,\n    paddingHorizontal: 16,\n  },\n  groupContainer: {\n    backgroundColor: '#ffffff',\n    overflow: 'hidden',\n  },\n  icon: {\n    width: 24,\n    height: 24,\n    marginRight: 32,\n    justifyContent: 'center',\n  },\n  message: {\n    marginTop: 12,\n    fontSize: 14,\n    color: BLACK_54PC_TRANSPARENT,\n    textAlignVertical: 'center',\n  },\n  rowSeparator: {\n    backgroundColor: '#dddddd',\n    height: 1,\n    width: '100%',\n  },\n  text: {\n    fontSize: 16,\n    color: BLACK_87PC_TRANSPARENT,\n    textAlignVertical: 'center',\n  },\n  title: {\n    fontSize: 16,\n    color: BLACK_54PC_TRANSPARENT,\n    textAlignVertical: 'center',\n  },\n  titleContainer: {\n    alignItems: 'flex-start',\n    padding: 16,\n    paddingTop: 24,\n  },\n});\n"]}